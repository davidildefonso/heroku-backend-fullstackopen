{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","id","Notification","message","baseUrl","noteService","getAll","axios","get","then","response","data","create","newObject","post","update","put","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","notesToShow","filter","targetNote","find","noteObject","map","catch","error","setTimeout","n","onSubmit","event","preventDefault","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"4KAiBeA,EAfF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAOC,EAAwB,EAAxBA,iBACfC,EAAQF,EAAKG,UACf,qBAAuB,iBAG5B,OACC,qCACG,oBAAKC,UAAU,OAAf,SAAwBJ,EAAKK,UAC/B,wBAAQC,QAAS,kBAAML,EAAiBD,EAAKO,KAA7C,SAAmDL,QCMvCM,EAbM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKL,UAAU,QAAf,SACGK,K,gBCRDC,EAAU,aAiCDC,EANM,CACnBC,OA1Ba,WAEd,OADkBC,IAAMC,IAAIJ,GACbK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAyBxCC,OAZa,SAAAC,GAEd,OADkBN,IAAMO,KAAKV,EAASS,GACvBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAWxCI,OARa,SAACd,EAAIY,GAEnB,OADkBN,IAAMS,IAAN,UAAaZ,EAAb,YAAwBH,GAAMY,GACjCJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCV3BM,EAdA,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GCyFSC,EA7FH,WAEV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAC5B,iBADF,mBAAOG,EAAP,KAAgBC,EAAhB,KAGD,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAWAC,qBATa,WACZ3B,EACEC,SACAG,MAAK,SAACE,GACLc,EAASd,QAKG,IAEf,IAuBKsB,EAAcL,EACfJ,EACAA,EAAMU,QAAO,SAAAxC,GAAI,OAAIA,EAAKG,aAGzBF,EAAmB,SAACM,GACxB,IAAMkC,EAAaX,EAAMY,MAAK,SAAA1C,GAAI,OAAIA,EAAKO,KAAOA,KAC5CoC,EAAU,2BAAOF,GAAP,IAAoBtC,WAAYsC,EAAWtC,YAE3DQ,EACGU,OAAQd,EAAKoC,GACb5B,MAAK,SAACE,GACLc,EAASD,EAAMc,KAAK,SAAA5C,GAAI,OAAIA,EAAKO,KAAOA,EAAKU,EAAOjB,SAErD6C,OAAM,SAAAC,GACHT,EAAgB,SAAD,OACNI,EAAWpC,QADL,sCAGhB0C,YAAW,WACVV,EAAgB,QACd,KACHN,EAASD,EAAMU,QAAO,SAAAQ,GAAC,OAAIA,EAAEzC,KAAOA,UAM1C,OACE,gCACE,uCACH,cAAC,EAAD,CAAcE,QAAS2B,IACvB,8BACK,yBAAQ9B,QAAS,kBAAM6B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGK,EAAYK,KAAI,SAAA5C,GAAI,OACjB,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAoBA,GAAzCD,EAAKO,SAGxB,uBAAM0C,SAhEQ,SAACC,GAChBA,EAAMC,iBAEN,IAAMR,EAAa,CAClBtC,QAAS2B,EACToB,MAAM,IAAIC,MAAOC,cACjBnD,UAAWoD,KAAKC,SAAW,IAG5B7C,EACEO,OAAQyB,GACR5B,MAAK,SAACE,GACLc,EAASD,EAAM2B,OAAN,2BAAkBd,GAAlB,IAA8BpC,GAAIU,EAAKV,OAChD0B,EAAW,QAmDb,UACI,uBAAOyB,MAAO1B,EAAS2B,SA9CL,SAACT,GACvBjB,EAAWiB,EAAMU,OAAOF,UA8CpB,wBAAQG,KAAK,SAAb,qBAEL,cAAC,EAAD,Q,MCzFHC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0e3ef280.chunk.js","sourcesContent":["import React  from \"react\";\r\n\r\nconst Note = ({ note , toggleImportance  }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important';\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n    \t<li  className=\"note\" >{note.content}</li>\r\n\t\t\t<button onClick={() => toggleImportance(note.id)}>{label}</button>\r\n\r\n\t\t</>\r\n  )\r\n}\r\n\r\n\r\nexport default Note;","import React  from \"react\";\r\n\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Notification;\r\n\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request =  axios.get(baseUrl);\r\n\treturn request.then(response => response.data);\r\n\r\n\t// const request = axios.get(baseUrl)\r\n  // const nonExisting = {\r\n  //   id: 10000,\r\n  //   content: 'This note is not saved to server',\r\n  //   date: '2019-05-30T17:30:31.098Z',\r\n  //   important: true,\r\n  // }\r\n  // return request.then(response => response.data.concat(nonExisting))\r\n\r\n}\r\n\r\nconst create = newObject => {\r\n  const request =  axios.post(baseUrl, newObject);\r\n\treturn request.then(response => response.data);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request =  axios.put(`${baseUrl}/${id}`, newObject);\r\n\treturn request.then(response => response.data);\r\n}\r\n\r\nconst noteService =  { \r\n  getAll, \r\n  create, \r\n  update \r\n};\r\n\r\nexport default noteService;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note.js\";\nimport Notification from \"./components/Notification.js\";\nimport noteService from './services/notes.js';\nimport Footer from './components/Footer.js';\n\n\nconst App = () => {\n\n  const [notes, setNotes] = useState([]);\n \tconst [newNote, setNewNote] = useState(\n    'a new note...'\n  );\n\tconst [showAll, setShowAll] = useState(false);\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\n\tconst hook = () => {\t\t\n\t\tnoteService\n\t\t\t.getAll()\n\t\t\t.then((data) => {\n\t\t\t\t\tsetNotes(data)\t\n\t\t\t});\n\t\t\n\t}\n\n\tuseEffect(hook, []);\n\n  const addNote = (event) => {\n\t\t\tevent.preventDefault();\n\n\t\t\tconst noteObject = {\n\t\t\t\tcontent: newNote,\n\t\t\t\tdate: new Date().toISOString(),\n\t\t\t\timportant: Math.random() < 0.5\t\t\n\t\t\t};\n\n\t\t\tnoteService\n\t\t\t\t.create( noteObject)\n\t\t\t\t.then((data) => {\n\t\t\t\t\t\tsetNotes(notes.concat( {...noteObject, id: data.id} ));\n\t\t\t\t\t\tsetNewNote('');\t\n\t\t\t\t});\n\n\t\n  }\n\n\tconst handleNoteChange = (event) => { \n    setNewNote(event.target.value);\n  }\n\n\tconst notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important ) ; \n\n\n\tconst toggleImportance = (id) => {\n\t\t\tconst targetNote = notes.find(note => note.id === id);\t\t\n\t\t\tconst noteObject = {...targetNote,  important: !targetNote.important};\n\n\t\t\tnoteService\n\t\t\t\t\t.update( id,  noteObject)\n\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\t\tsetNotes(notes.map( note => note.id === id ? data : note ));\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\t  setErrorMessage(\n\t\t\t\t\t\t\t\t\t`Note '${targetNote.content}' was already removed from server`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\t\tsetErrorMessage(null)\n\t\t\t\t\t\t\t\t}, 5000)\n\t\t\t\t\t\t\t\tsetNotes(notes.filter(n => n.id !== id))\n\t\t\t\t\t});\n\t\t\n\t}\n\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\t\t\t<Notification message={errorMessage} />\n\t\t\t<div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n            <Note key={note.id} note={note} toggleImportance = {toggleImportance} />\n        )}\n      </ul>\n\t\t\t <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form> \n\t\t\t<Footer  />\n    </div>\n  )\n};\n\nexport default App;","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\n\nReactDOM.render(\n  <App  />,\n  document.getElementById('root')\n);"],"sourceRoot":""}